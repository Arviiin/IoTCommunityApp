3.Java基本含义与基本语法
    抽象类：规定一个或多个抽象方法的类别本身必须定义为abstract，抽象类只是用来派生子类，而不能用它来创建对象。
    final类：又称“最终类”，它只能用来创建对象，而不能被继承，与抽象类刚好相反，而且抽象类与最终类不能同时修饰同一个类。
    包：Java中的包是相关类和接口的集合，创建包须使用关键字package。
    继承：Java作为面向对象编程语言，支持继承这基本概念。但Java只支持单根继承，java.lang.Object是所有其他类的基类。[3] 
    多态类：在Java中，对象变量是多态的。而Java中不支持多重继承。
    接口：Java中的接口是一系列方法的声明，是一些方法特征的集合，一个接口只有方法的特征没有方法的实现，因此这些方法可以在不同的地方被不同的类实现，而这些实现可以具有不同的行为。
    通用编程：任何类类型的所有值都可以同Object类型的变量来代替。
    封装：把数据和行为结合起在一个包中，并对对象使用者隐藏数据的实现过程，一个对象中的数据叫他的实例字段（instance field）。
    重载：当多个方法具有相同的名字而含有不同的参数时，便发生重载。编译器必须挑选出调用哪个方法进行编译。
    重写：也可称为方法的“覆盖”。在Java中，子类可继承父类中的方法，而不需要重新编写相同的方法。但有时子类并不想原封不动地继承父类的方法，而是想作一定的修改，这就需要采用方法的重写。值得注意的是，子类在重新定义父类已有的方法时，应保持与父类完全相同的方法头声明。
    Class类：Object类中的getClass方法返回Class类型的一个实例，程序启动时包含在main方法的类会被加载，虚拟机要加载他需要的所有类，每一个加载的类都要加载它需要的类。[4] 
    基本语法
    编写Java程序时，应注意以下几点：
	
    大小写敏感：Java是大小写敏感的，这就意味着标识符Hello与hello是不同的。
	
	
    类名：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 MyFirstJavaClass。
	
	
    方法名：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写，例如myFirstJavaMethod。
	
	
    源文件名：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记Java是大小写敏感的），文件名的后缀为.java。（如果文件名和类名不相同则会导致编译错误）。
	
	
    主方法入口：所有的Java 程序由public static void main(String[]args)方法开始执行。
	
